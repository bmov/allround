"""support mysql

Revision ID: 76b364ed8c6d
Revises: 09e5caa0b47a
Create Date: 2025-06-25 02:45:51.031513

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '76b364ed8c6d'
down_revision: Union[str, None] = '09e5caa0b47a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('docs', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('token_refreshers', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('token_refreshers', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('docs', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
