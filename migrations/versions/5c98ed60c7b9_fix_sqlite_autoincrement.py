"""Fix SQLite autoincrement

Revision ID: 5c98ed60c7b9
Revises: 50ec56c01479
Create Date: 2024-05-06 08:36:08.240405

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c98ed60c7b9'
down_revision: Union[str, None] = '50ec56c01479'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('docs', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('page_folders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('pages', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('table_columns', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('table_rows', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('table_values', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('row_id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)
        batch_op.alter_column('column_id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False)

    with op.batch_alter_table('token_refreshers', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               type_=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('token_refreshers', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('table_values', schema=None) as batch_op:
        batch_op.alter_column('column_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False)
        batch_op.alter_column('row_id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('table_rows', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('table_columns', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('pages', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('page_folders', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('docs', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BigInteger().with_variant(sa.Integer(), 'sqlite'),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
