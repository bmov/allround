"""Add table handler

Revision ID: eb096987147a
Revises: 308fc4ae3f90
Create Date: 2024-05-05 08:30:58.118304

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'eb096987147a'
down_revision: Union[str, None] = '308fc4ae3f90'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('autoincrement', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tables_autoincrement'), 'tables', ['autoincrement'], unique=False)
    op.create_index(op.f('ix_tables_name'), 'tables', ['name'], unique=False)
    op.create_table('table_columns',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('column_type', sa.String(length=16), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_table_columns_column_type'), 'table_columns', ['column_type'], unique=False)
    op.create_index(op.f('ix_table_columns_name'), 'table_columns', ['name'], unique=False)
    op.create_index(op.f('ix_table_columns_table_id'), 'table_columns', ['table_id'], unique=False)
    op.create_table('table_rows',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_table_rows_table_id'), 'table_rows', ['table_id'], unique=False)
    op.create_table('table_values',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('row_id', sa.BigInteger(), nullable=False),
    sa.Column('column_id', sa.BigInteger(), nullable=False),
    sa.Column('val_str', sa.String(length=191), nullable=True),
    sa.Column('val_int', sa.BigInteger(), nullable=True),
    sa.Column('val_bool', sa.Boolean(), nullable=True),
    sa.Column('val_decimal', sa.Numeric(), nullable=True),
    sa.Column('val_float', sa.Float(), nullable=True),
    sa.Column('val_double', sa.Double(), nullable=True),
    sa.Column('val_text', sa.Text(), nullable=True),
    sa.Column('val_binpath', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['column_id'], ['table_columns.id'], ),
    sa.ForeignKeyConstraint(['row_id'], ['table_rows.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_table_values_column_id'), 'table_values', ['column_id'], unique=False)
    op.create_index(op.f('ix_table_values_row_id'), 'table_values', ['row_id'], unique=False)
    op.create_index(op.f('ix_table_values_table_id'), 'table_values', ['table_id'], unique=False)
    op.create_index(op.f('ix_table_values_val_binpath'), 'table_values', ['val_binpath'], unique=False)
    op.create_index(op.f('ix_table_values_val_bool'), 'table_values', ['val_bool'], unique=False)
    op.create_index(op.f('ix_table_values_val_decimal'), 'table_values', ['val_decimal'], unique=False)
    op.create_index(op.f('ix_table_values_val_double'), 'table_values', ['val_double'], unique=False)
    op.create_index(op.f('ix_table_values_val_float'), 'table_values', ['val_float'], unique=False)
    op.create_index(op.f('ix_table_values_val_int'), 'table_values', ['val_int'], unique=False)
    op.create_index(op.f('ix_table_values_val_str'), 'table_values', ['val_str'], unique=False)
    op.alter_column('docs', 'id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('page_folders', 'id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('pages', sa.Column('folder_id', sa.BigInteger(), nullable=False))
    op.alter_column('pages', 'id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_index('ix_pages_folder', table_name='pages')
    op.create_index(op.f('ix_pages_folder_id'), 'pages', ['folder_id'], unique=False)
    op.drop_column('pages', 'folder')
    op.alter_column('token_refreshers', 'id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users', 'id',
               existing_type=mysql.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('token_refreshers', 'id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('pages', sa.Column('folder', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_pages_folder_id'), table_name='pages')
    op.create_index('ix_pages_folder', 'pages', ['folder'], unique=False)
    op.alter_column('pages', 'id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('pages', 'folder_id')
    op.alter_column('page_folders', 'id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('docs', 'id',
               existing_type=sa.BigInteger(),
               type_=mysql.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_index(op.f('ix_table_values_val_str'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_val_int'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_val_float'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_val_double'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_val_decimal'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_val_bool'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_val_binpath'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_table_id'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_row_id'), table_name='table_values')
    op.drop_index(op.f('ix_table_values_column_id'), table_name='table_values')
    op.drop_table('table_values')
    op.drop_index(op.f('ix_table_rows_table_id'), table_name='table_rows')
    op.drop_table('table_rows')
    op.drop_index(op.f('ix_table_columns_table_id'), table_name='table_columns')
    op.drop_index(op.f('ix_table_columns_name'), table_name='table_columns')
    op.drop_index(op.f('ix_table_columns_column_type'), table_name='table_columns')
    op.drop_table('table_columns')
    op.drop_index(op.f('ix_tables_name'), table_name='tables')
    op.drop_index(op.f('ix_tables_autoincrement'), table_name='tables')
    op.drop_table('tables')
    # ### end Alembic commands ###
